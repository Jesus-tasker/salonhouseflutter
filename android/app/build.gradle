def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services' //notificacioens
apply plugin: 'com.google.firebase.crashlytics'


android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.jesustasker.salonhouse"
        minSdkVersion 21
        targetSdkVersion 29
        multiDexEnabled true
        
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
       /* release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }*/
        debug {
        minifyEnabled true

        // TODO: Add your own signing config for the release build.
        // Signing with the debug keys for now, so `flutter run --release` works.
        signingConfig signingConfigs.debug
    }
    }
}

flutter {
    source '../..'
}

dependencies {
 implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
 androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

 //notificaciones

 implementation platform('com.google.firebase:firebase-bom:25.12.0') 
 implementation 'com.google.firebase:firebase-analytics-ktx'

  implementation 'com.google.firebase:firebase-auth-ktx'
  implementation 'com.google.firebase:firebase-firestore-ktx'

 implementation 'com.google.android.gms:play-services-base:17.5.0'

  implementation 'com.google.firebase:firebase-messaging-ktx'

  implementation 'com.android.support:multidex:1.0.3'
  

  
  
 implementation 'com.google.firebase:firebase-messaging'
 

 //implementation 'com.google.firebase:firebase-analytics'
  implementation 'com.google.firebase:firebase-core:17.2.1'
 implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.2'


 implementation 'com.google.firebase:firebase-crashlytics:17.0.1'
// implementation 'com.google.firebase:firebase-analytics:18.0.0' 

//notificaciones

  




}
//ya esta arriba en otra lista de plugins :
apply plugin:'com.google.gms.google-services'
